// Code generated by "enumer -type=ScanningStatus -json"; DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
	"strings"
)

const _ScanningStatusName = "NO_STATUSQUEUEDIN_PROGRESSSUCCESSFAILURE"

var _ScanningStatusIndex = [...]uint8{0, 9, 15, 26, 33, 40}

const _ScanningStatusLowerName = "no_statusqueuedin_progresssuccessfailure"

func (i ScanningStatus) String() string {
	if i < 0 || i >= ScanningStatus(len(_ScanningStatusIndex)-1) {
		return fmt.Sprintf("ScanningStatus(%d)", i)
	}
	return _ScanningStatusName[_ScanningStatusIndex[i]:_ScanningStatusIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ScanningStatusNoOp() {
	var x [1]struct{}
	_ = x[NO_STATUS-(0)]
	_ = x[QUEUED-(1)]
	_ = x[IN_PROGRESS-(2)]
	_ = x[SUCCESS-(3)]
	_ = x[FAILURE-(4)]
}

var _ScanningStatusValues = []ScanningStatus{NO_STATUS, QUEUED, IN_PROGRESS, SUCCESS, FAILURE}

var _ScanningStatusNameToValueMap = map[string]ScanningStatus{
	_ScanningStatusName[0:9]:        NO_STATUS,
	_ScanningStatusLowerName[0:9]:   NO_STATUS,
	_ScanningStatusName[9:15]:       QUEUED,
	_ScanningStatusLowerName[9:15]:  QUEUED,
	_ScanningStatusName[15:26]:      IN_PROGRESS,
	_ScanningStatusLowerName[15:26]: IN_PROGRESS,
	_ScanningStatusName[26:33]:      SUCCESS,
	_ScanningStatusLowerName[26:33]: SUCCESS,
	_ScanningStatusName[33:40]:      FAILURE,
	_ScanningStatusLowerName[33:40]: FAILURE,
}

var _ScanningStatusNames = []string{
	_ScanningStatusName[0:9],
	_ScanningStatusName[9:15],
	_ScanningStatusName[15:26],
	_ScanningStatusName[26:33],
	_ScanningStatusName[33:40],
}

// ScanningStatusString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ScanningStatusString(s string) (ScanningStatus, error) {
	if val, ok := _ScanningStatusNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ScanningStatusNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ScanningStatus values", s)
}

// ScanningStatusValues returns all values of the enum
func ScanningStatusValues() []ScanningStatus {
	return _ScanningStatusValues
}

// ScanningStatusStrings returns a slice of all String values of the enum
func ScanningStatusStrings() []string {
	strs := make([]string, len(_ScanningStatusNames))
	copy(strs, _ScanningStatusNames)
	return strs
}

// IsAScanningStatus returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ScanningStatus) IsAScanningStatus() bool {
	for _, v := range _ScanningStatusValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for ScanningStatus
func (i ScanningStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for ScanningStatus
func (i *ScanningStatus) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("ScanningStatus should be a string, got %s", data)
	}

	var err error
	*i, err = ScanningStatusString(s)
	return err
}
